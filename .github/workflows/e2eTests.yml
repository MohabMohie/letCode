name: Sample Unattended / Remote Tests

on:
  schedule:
    - cron: '00 1 * * *'
  workflow_dispatch:

env:
  PROJECT_SUB_DIR: "letCode/letCode/"

jobs:
  Ubuntu_Chrome_Cucumber_Grid:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Set up Native Selenium Grid
        if: runner.os == 'Linux'
        run: docker-compose -f .github/docker-compose/selenium4grid.yml up --scale chrome=4 --scale edge=0 --scale firefox=0 -d
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true
      - name: Check running containers
        if: runner.os == 'Linux'
        run: docker ps
      - name: Run tests on Linux/MacOS
        if: runner.os != 'Windows'
        continue-on-error: true
        run: mvn clean -e -f "${PROJECT_SUB_DIR}" test "-DretryMaximumNumberOfAttempts=2" "-DexecutionAddress=localhost:4444" "-DtargetOperatingSystem=LINUX" "-DtargetBrowserName=chrome" "-DmaximumPerformanceMode=2" "-DgenerateAllureReportArchive=true"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: ./target/jacoco/jacoco.xml
          verbose: true
      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Ubuntu_Chrome_Cucumber_Grid_Allure
          path:  ${{ env.PROJECT_SUB_DIR }}"generatedReport_*.zip"
      - name: Upload Execution Summary Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Ubuntu_Chrome_Cucumber_Grid_Summary
          path: ${{ env.PROJECT_SUB_DIR }}"execution-summary/ExecutionSummaryReport_*.html"

  Windows_Edge_Cucumber:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true
      - name: Run tests on Windows
        if: runner.os == 'Windows'
        continue-on-error: true
        run: mvn -f "${PROJECT_SUB_DIR}" test "-DretryMaximumNumberOfAttempts=2" "-DexecutionAddress=local" "-DtargetOperatingSystem=WINDOWS" -DtargetBrowserName="MicrosoftEdge" "-DmaximumPerformanceMode=2" "-DgenerateAllureReportArchive=true"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: ./target/jacoco/jacoco.xml
          verbose: true
      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Windows_Edge_Cucumber_Allure
          path: ${{ env.PROJECT_SUB_DIR }}"generatedReport_*.zip"
      - name: Upload Execution Summary Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Windows_Edge_Cucumber_Summary
          path: ${{ env.PROJECT_SUB_DIR }}"execution-summary/ExecutionSummaryReport_*.html"

  MacOSX_Safari_Cucumber_BrowserStack:
    runs-on: macOS-12
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'maven'
          check-latest: true
      - name: Run tests
        continue-on-error: true
        run: mvn clean -e -f "${PROJECT_SUB_DIR}" test "-DretryMaximumNumberOfAttempts=2" "-DexecutionAddress=browserstack" "-DtargetOperatingSystem=MAC" -DtargetBrowserName="Safari" "-DmaximumPerformanceMode=1" "-DgenerateAllureReportArchive=true" "-DbrowserStack.os=OS X" "-DbrowserStack.osVersion=Monterey" "-DbrowserStack.browserVersion=15.3"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: ./target/jacoco/jacoco.xml
          verbose: true
      - name: Upload Allure Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MacOSX_Safari_Cucumber_BrowserStack_Allure
          path: ${{ env.PROJECT_SUB_DIR }}"generatedReport_*.zip"
      - name: Upload Execution Summary Report as Pipeline Artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: MacOSX_Safari_Cucumber_BrowserStack_Summary
          path: ${{ env.PROJECT_SUB_DIR }}"execution-summary/ExecutionSummaryReport_*.html"